=================== bash cell | delete gnupg home directory ====================

# delete contents of the .gnupg directory for this REPRO
gnupg-runtime.purge-keys

# show that the gnupg home directory is now empty
tree -a ${GNUPGHOME}

--------------------------------- cell outputs ---------------------------------
/mnt/gnupg-runtime/.gnupg-runtime/.gnupg

0 directories, 0 files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=================== bash cell | delete gnupg home directory ====================

# list the gpg keys to force creation of the gpg home directory
gpg --list-keys 2>&1

# show that the default keyring and trust database were created
echo
tree -a ${GNUPGHOME}

--------------------------------- cell outputs ---------------------------------
gpg: keybox '/mnt/gnupg-runtime/.gnupg-runtime/.gnupg/pubring.kbx' created
gpg: /mnt/gnupg-runtime/.gnupg-runtime/.gnupg/trustdb.gpg: trustdb created

/mnt/gnupg-runtime/.gnupg-runtime/.gnupg
|-- pubring.kbx
`-- trustdb.gpg

0 directories, 2 files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


========================== bash cell | generate a key ==========================

gpg --batch --generate-key << END_GPG_INPUT
Key-Type: RSA
Key-Length: 1024
Name-Real: repro user
Name-Email: repro@repros.org
Passphrase: repro
END_GPG_INPUT

# list the gpg keys
gpg --list-keys | grep uid

--------------------------------- cell outputs ---------------------------------
uid           [ultimate] repro user <repro@repros.org>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


