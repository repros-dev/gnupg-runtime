=========== bash cell | import the private key for repro@repros.dev ============

# delete contents of the .gnupg directory for this REPRO
gnupg-runtime.purge-keys

# import the private key file
gpg --import --pinentry-mode loopback --passphrase=repro data/private.asc 2>&1
echo

# list the gpg keys
gpg --list-keys

--------------------------------- cell outputs ---------------------------------
gpg: directory '/mnt/gnupg-runtime/.gnupg-runtime/.gnupg' created
gpg: keybox '/mnt/gnupg-runtime/.gnupg-runtime/.gnupg/pubring.kbx' created
gpg: /mnt/gnupg-runtime/.gnupg-runtime/.gnupg/trustdb.gpg: trustdb created
gpg: key A34F78D2B23714E8: public key "repro user <repro@repros.dev>" imported
gpg: key A34F78D2B23714E8: secret key imported
gpg: Total number processed: 1
gpg:               imported: 1
gpg:       secret keys read: 1
gpg:   secret keys imported: 1

/mnt/gnupg-runtime/.gnupg-runtime/.gnupg/pubring.kbx
----------------------------------------------------
pub   rsa1024 2023-03-14 [SCEA]
      A168CC1B1D30CC9D079AD5FEA34F78D2B23714E8
uid           [ unknown] repro user <repro@repros.dev>

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


================ bash cell | sign a file using the private key =================

rm -f tmp/message.sig

gpg --detach-sign --local-user repro@repros.dev     --pinentry-mode loopback --passphrase=repro     --output tmp/message.sig              --armor data/message.txt 2>&1

gnupg-runtime.redact-key tmp/message.sig

--------------------------------- cell outputs ---------------------------------
-----BEGIN PGP SIGNATURE-----

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxx
xxxxx
-----END PGP SIGNATURE-----
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


============ bash cell | import the public key for repro@repros.dev ============

# delete contents of the .gnupg directory for this REPRO
gnupg-runtime.purge-keys

# import the public key file
gpg --import data/public.pgp 2>&1
echo

# list the gpg keys
gpg --list-keys

# show the public key that was imported
gpg --export --armor repro@repros.dev

--------------------------------- cell outputs ---------------------------------
gpg: directory '/mnt/gnupg-runtime/.gnupg-runtime/.gnupg' created
gpg: keybox '/mnt/gnupg-runtime/.gnupg-runtime/.gnupg/pubring.kbx' created
gpg: /mnt/gnupg-runtime/.gnupg-runtime/.gnupg/trustdb.gpg: trustdb created
gpg: key A34F78D2B23714E8: public key "repro user <repro@repros.dev>" imported
gpg: Total number processed: 1
gpg:               imported: 1

/mnt/gnupg-runtime/.gnupg-runtime/.gnupg/pubring.kbx
----------------------------------------------------
pub   rsa1024 2023-03-14 [SCEA]
      A168CC1B1D30CC9D079AD5FEA34F78D2B23714E8
uid           [ unknown] repro user <repro@repros.dev>

-----BEGIN PGP PUBLIC KEY BLOCK-----

mI0EZA/vhwEEAObX3uatgdgAZd8aIYxOWsUNHHsNQ8M0TWr/tA9+mv76cRq4t4Gc
77IBU4n47JXd6Ce849N3JtmWN5479ta2zIed9R+rUfgcJjW5s2Mnwb7cK6YhyOI5
wGkMoLwpAR2DjijRCOe/KEqp+NneYEOuE3CSyL0gaFR1htdiu933Y40HABEBAAG0
HXJlcHJvIHVzZXIgPHJlcHJvQHJlcHJvcy5kZXY+iM4EEwEKADgWIQShaMwbHTDM
nQea1f6jT3jSsjcU6AUCZA/vhwIbLwULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAK
CRCjT3jSsjcU6H6CBACTLP0nC/pUDr2kh31InvH72WmoFVg5YmJ7N7P4sUVnlyIy
V6PF4u/IV7igs2kgMCSRxEoKvZ1SeiAqZS8w54CnuhIJrO7rwDIrOJTPQARyrKwE
SR6WBBseauZDz2KXC/4AcfaFWfqHXNrkPT3DTgHT32ZVGzpReOgCh0QWhXVeMQ==
=8Jrj
-----END PGP PUBLIC KEY BLOCK-----
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


====== bash cell | verify the message and signature using the public key =======

gpg -v --verify tmp/message.sig data/message.txt 2>&1 | tail -6

--------------------------------- cell outputs ---------------------------------
gpg: using pgp trust model
gpg: Good signature from "repro user <repro@repros.dev>" [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: A168 CC1B 1D30 CC9D 079A  D5FE A34F 78D2 B237 14E8
gpg: binary signature, digest algorithm SHA512, key algorithm rsa1024
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


